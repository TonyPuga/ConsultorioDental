<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:winfx="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:local="clr-namespace:ConsultorioDental.WPF.Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style TargetType="Button" x:Key="MenuButtonStyle">
        <Setter Property="Background" Value="#34495E"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ToggleButtonStyle">
        <Setter Property="Background" Value="#34495E"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderToolbarStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#F7F7F6" Offset="0.004"/>
                    <GradientStop Color="#F7F7F6" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonGeneralStyle" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdContenedor">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.27"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.81" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="grdContenedor" AutoReverse="True">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="grdContenedor" Opacity="0.81">
                            <Grid.RenderTransform>
                                <TranslateTransform/>
                            </Grid.RenderTransform>
                            <!--<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand"/>-->
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Cursor="Hand"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grdContenedor" Value="0.27"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBlockGeneralStyle" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="#34495E"/>
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="TextBlockTituloGeneralStyle" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="#34495E"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DatePickerGeneralStyle" TargetType="DatePicker">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="#34495E" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>
    
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="TextBoxGeneralStyle" TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontWeight" Value="Normal" />
        <!--<Setter Property="VerticalAlignment" Value="Center"/>-->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent, FallbackValue=''}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="ReadOnly"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF90D11F"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" StrokeThickness="1" Margin="0" RadiusY="2" RadiusX="2" Stroke="#FF727272">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFCFE9F1" Offset="0"/>
                                    <GradientStop Color="White" Offset="0.414"/>
                                    <GradientStop Color="#FFD7F0F7" Offset="1"/>
                                    <GradientStop Color="White" Offset="0.752"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{winfx:TemplateBinding SnapsToDevicePixels}" Margin="2" VerticalAlignment="Stretch" Foreground="#FF313131"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#99FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="#7FFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#A89481"/>
                            <Setter TargetName="rectangle" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="#F4F4F4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="#A89481"/>
                            <Setter TargetName="rectangle" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="#F4F4F4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="1" CornerRadius="2">
                        <AdornedElementPlaceholder></AdornedElementPlaceholder>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Trigger para cuando la propiedad ValidatesOnNotifyDataErrors encuentra errores -->
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1" />
                <!--<Setter Property="CornerRadius" Value="2"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="RowBackground" Value="White"/>
        <Setter Property="AlternatingRowBackground" Value="#66E0FFFF"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#34495E" />
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Padding" Value="6,3"/>
                    <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    <Setter Property="BorderBrush" Value="White"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Habilitado}" Value="False">
                            <Setter Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxGeneralStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="#34495E" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="ComboBoxGeneralStyle" TargetType="ComboBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="#FFA3D0EC"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Habilitado}" Value="False">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonPaginadorStyle" TargetType="Button"></Style>

    <!--Custom Controsl-->

    <Style TargetType="{x:Type local:PaginacionControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PaginacionControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid  HorizontalAlignment="Stretch"   Background="#34495E">
                            <Border HorizontalAlignment="Center">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                    <Button x:Name="btnAnterior" Style="{StaticResource ButtonGeneralStyle}"  Command="{TemplateBinding CommandAnterior}" ToolTipService.ToolTip="Al Principio" VerticalAlignment="Stretch" >
                                        <winfx:Grid Width="Auto">
                                            <winfx:Border BorderBrush="{x:Null}" BorderThickness="1" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <winfx:TextBlock TextWrapping="Wrap" Text="Anterior" Foreground="#FFFBFBFB" FontSize="10.667"/>
                                            </winfx:Border>
                                        </winfx:Grid>
                                    </Button>

                                    <Image Source="/Sodimac.Recuperos.WPF.Client;component/Images/Separador.png" Width="20" Height="20"/>
                                    <TextBlock x:Name="txtPaginaActual"  Text="{TemplateBinding TextPaginaActual}" VerticalAlignment="Center" Foreground="#FFF9F9F9" FontWeight="Bold"/>
                                    <Image Source="/Sodimac.Recuperos.WPF.Client;component/Images/Separador.png" Width="20" Height="20"/>

                                    <Button x:Name="btnSiguiente" Style="{StaticResource ButtonGeneralStyle}" ToolTipService.ToolTip="Siguiente" VerticalAlignment="Center" Command="{TemplateBinding CommandSiguiente}" >
                                        <StackPanel>
                                            <winfx:TextBlock TextWrapping="Wrap" Text="Siguiente" Foreground="White" FontSize="10.667"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </Border>
                            <Border HorizontalAlignment="Right" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>